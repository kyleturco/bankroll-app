'use strict';

angular.module('bankRoll').controller('RegisterCtrl', function ($scope, $location, API_URL, $http, currentUser, $rootScope) {
  var vm = this;

  vm.login = function (email, password) {
    var fb = new Firebase(API_URL);

    fb.authWithPassword({
      email: vm.email,
      password: vm.password
    }, function (err, authData) {
      if (err) {
        console.log('Error', err);
      } else {
        currentUser.set(authData);
        $location.path('/overview');
        $scope.$apply();
      }
    });
  };

  vm.register = function (email, password) {
    var ref = new Firebase('https://bankroll.firebaseio.com/profiles/');
    var vm = this;

    ref.createUser({
      name: vm.name,
      email: vm.email,
      password: vm.password
    }, function (err, authData) {
      if (err) {
        console.log('Error', err);
      } else {
        vm.login();
        console.log('User created successfully');

        currentUser.set(authData);
        // currentUser === {}
        var profile = {};
        ref.child(authData.uid).set(profile);

        vm.createIncome = function () {
          debugger;
          ref.child(authData.uid).set('/income');
        };

        vm.createExpense = function () {
          ref.child(authData.uid).set('/expense');
        };
      }
    });
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hc3NldHMvYXV0aC9yZWdpc3Rlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUNKLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FFbEIsVUFBVSxDQUFDLGNBQWMsRUFBRSxVQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFO0FBQ2hHLE1BQUksRUFBRSxHQUFHLElBQUksQ0FBQzs7QUFFZCxJQUFFLENBQUMsS0FBSyxHQUFHLFVBQVUsS0FBSyxFQUFFLFFBQVEsRUFBRTtBQUNwQyxRQUFJLEVBQUUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7QUFFL0IsTUFBRSxDQUFDLGdCQUFnQixDQUFDO0FBQ2xCLFdBQUssRUFBRSxFQUFFLENBQUMsS0FBSztBQUNmLGNBQVEsRUFBRSxFQUFFLENBQUMsUUFBUTtLQUN0QixFQUFFLFVBQVUsR0FBRyxFQUFFLFFBQVEsRUFBRTtBQUMxQixVQUFJLEdBQUcsRUFBRTtBQUNQLGVBQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFBO09BQzFCLE1BQU07QUFDTCxtQkFBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixpQkFBUyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM1QixjQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7T0FDakI7S0FDRixDQUFDLENBQUM7R0FDSixDQUFDOztBQUVGLElBQUUsQ0FBQyxRQUFRLEdBQUcsVUFBVSxLQUFLLEVBQUUsUUFBUSxFQUFFO0FBQ3ZDLFFBQUksR0FBRyxHQUFHLElBQUksUUFBUSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDcEUsUUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDOztBQUVkLE9BQUcsQ0FBQyxVQUFVLENBQUM7QUFDYixVQUFJLEVBQUUsRUFBRSxDQUFDLElBQUk7QUFDYixXQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUs7QUFDZixjQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVE7S0FDdEIsRUFBRSxVQUFVLEdBQUcsRUFBRSxRQUFRLEVBQUU7QUFDMUIsVUFBSSxHQUFHLEVBQUU7QUFDUCxlQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQTtPQUMxQixNQUFNO0FBQ0wsVUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ1gsZUFBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDOztBQUV6QyxtQkFBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFMUIsWUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQTs7QUFFcEMsVUFBRSxDQUFDLFlBQVksR0FBRyxZQUFZO0FBQzlCLG1CQUFTO0FBQ1QsYUFBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1NBQ3JDLENBQUE7O0FBRUQsVUFBRSxDQUFDLGFBQWEsR0FBRyxZQUFZO0FBQy9CLGFBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQTtTQUN0QyxDQUFBO09BQ0Y7S0FDRixDQUFDLENBQUE7R0FFSCxDQUFDO0NBRUgsQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9hc3NldHMvYXV0aC9yZWdpc3Rlci5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhclxuICAubW9kdWxlKCdiYW5rUm9sbCcpXG5cbiAgLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgQVBJX1VSTCwgJGh0dHAsIGN1cnJlbnRVc2VyLCAkcm9vdFNjb3BlKSB7XG4gICAgdmFyIHZtID0gdGhpcztcblxuICAgIHZtLmxvZ2luID0gZnVuY3Rpb24gKGVtYWlsLCBwYXNzd29yZCkge1xuICAgICAgdmFyIGZiID0gbmV3IEZpcmViYXNlKEFQSV9VUkwpO1xuXG4gICAgICBmYi5hdXRoV2l0aFBhc3N3b3JkKHtcbiAgICAgICAgZW1haWw6IHZtLmVtYWlsLFxuICAgICAgICBwYXNzd29yZDogdm0ucGFzc3dvcmRcbiAgICAgIH0sIGZ1bmN0aW9uIChlcnIsIGF1dGhEYXRhKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3InLCBlcnIpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY3VycmVudFVzZXIuc2V0KGF1dGhEYXRhKTtcbiAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnL292ZXJ2aWV3Jyk7XG4gICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgdm0ucmVnaXN0ZXIgPSBmdW5jdGlvbiAoZW1haWwsIHBhc3N3b3JkKSB7XG4gICAgICB2YXIgcmVmID0gbmV3IEZpcmViYXNlKCdodHRwczovL2Jhbmtyb2xsLmZpcmViYXNlaW8uY29tL3Byb2ZpbGVzLycpO1xuICAgICAgdmFyIHZtID0gdGhpcztcblxuICAgICAgcmVmLmNyZWF0ZVVzZXIoe1xuICAgICAgICBuYW1lOiB2bS5uYW1lLFxuICAgICAgICBlbWFpbDogdm0uZW1haWwswqBcbiAgICAgICAgcGFzc3dvcmQ6IHZtLnBhc3N3b3JkXG4gICAgICB9LCBmdW5jdGlvbiAoZXJyLCBhdXRoRGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yJywgZXJyKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZtLmxvZ2luKCk7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJVc2VyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIpO1xuXG4gICAgICAgICAgY3VycmVudFVzZXIuc2V0KGF1dGhEYXRhKTtcbiAgICAgICAgICAvLyBjdXJyZW50VXNlciA9PT0ge31cbiAgICAgICAgICB2YXIgcHJvZmlsZSA9IHt9O1xuICAgICAgICAgIHJlZi5jaGlsZChhdXRoRGF0YS51aWQpLnNldChwcm9maWxlKVxuXG4gICAgICAgICAgdm0uY3JlYXRlSW5jb21lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICAgIHJlZi5jaGlsZChhdXRoRGF0YS51aWQpLnNldCgnL2luY29tZScpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdm0uY3JlYXRlRXhwZW5zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZWYuY2hpbGQoYXV0aERhdGEudWlkKS5zZXQoJy9leHBlbnNlJylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICB9O1xuXG4gIH0pO1xuIl19
