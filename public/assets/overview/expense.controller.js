'use strict';

angular.module('bankRoll').controller('ExpenseController', function ($scope, expenseFactory, $firebaseObject, API_URL, $rootScope, currentUser) {
  var vm = this;
  var fb = new Firebase(API_URL);
  // var authData = fb.getAuth();

  var profileRef = new Firebase('https://bankroll.firebaseio.com/profiles');
  var currentUserExpense = profileRef.child($rootScope.auth.uid).child('expense');
  $scope.expenseList = $firebaseObject(currentUserExpense);

  // expenseFactory.allExpense(function(expense){
  //   vm.expense = expense;
  // });

  vm.saveExpense = function () {
    debugger;
    var randNum = Math.floor(Math.random() * 1000000000000000);
    var profileRef = new Firebase('https://bankroll.firebaseio.com/profiles/');
    vm.expense.time = Date();
    vm.expense.date = JSON.stringify(vm.expense.date);
    profileRef.child($rootScope.auth.uid + '/expense' + '/expense' + randNum).set(vm.expense, function (err) {
      console.log('done setting expense, err:', err);
      // $scope.incomeList = $firebaseObject(profileRef);
      // value has been set, can redirect the user or what ever
      vm.expense = {};
      $scope.$apply();
    });
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hc3NldHMvb3ZlcnZpZXcvZXhwZW5zZS5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUNKLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FFbEIsVUFBVSxDQUFDLG1CQUFtQixFQUFFLFVBQVUsTUFBTSxFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUU7QUFDcEgsTUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBQ2QsTUFBSSxFQUFFLEdBQUcsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7OztBQUcvQixNQUFJLFVBQVUsR0FBRyxJQUFJLFFBQVEsQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO0FBQzFFLE1BQUksa0JBQWtCLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNoRixRQUFNLENBQUMsV0FBVyxHQUFHLGVBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDOzs7Ozs7QUFNekQsSUFBRSxDQUFDLFdBQVcsR0FBRyxZQUFZO0FBQzNCLGFBQVM7QUFDVCxRQUFJLE9BQU8sR0FBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQyxBQUFDLENBQUM7QUFDN0QsUUFBSSxVQUFVLEdBQUcsSUFBSSxRQUFRLENBQUMsMkNBQTJDLENBQUMsQ0FBQztBQUMzRSxNQUFFLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLEVBQUUsQ0FBQztBQUN6QixNQUFFLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEQsY0FBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxVQUFVLEdBQUcsVUFBVSxHQUFJLE9BQU8sQUFBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBUyxHQUFHLEVBQUU7QUFDeEcsYUFBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxHQUFHLENBQUMsQ0FBQzs7O0FBRy9DLFFBQUUsQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0FBQ2hCLFlBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUNqQixDQUFDLENBQUM7R0FDSixDQUFDO0NBQ0wsQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9hc3NldHMvb3ZlcnZpZXcvZXhwZW5zZS5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhclxuICAubW9kdWxlKCdiYW5rUm9sbCcpXG5cbiAgLmNvbnRyb2xsZXIoJ0V4cGVuc2VDb250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgZXhwZW5zZUZhY3RvcnksICRmaXJlYmFzZU9iamVjdCwgQVBJX1VSTCwgJHJvb3RTY29wZSwgY3VycmVudFVzZXIpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZhciBmYiA9IG5ldyBGaXJlYmFzZShBUElfVVJMKTtcbiAgICAvLyB2YXIgYXV0aERhdGEgPSBmYi5nZXRBdXRoKCk7XG5cbiAgICB2YXIgcHJvZmlsZVJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9iYW5rcm9sbC5maXJlYmFzZWlvLmNvbS9wcm9maWxlcycpO1xuICAgIHZhciBjdXJyZW50VXNlckV4cGVuc2UgPSBwcm9maWxlUmVmLmNoaWxkKCRyb290U2NvcGUuYXV0aC51aWQpLmNoaWxkKCdleHBlbnNlJyk7XG4gICAgJHNjb3BlLmV4cGVuc2VMaXN0ID0gJGZpcmViYXNlT2JqZWN0KGN1cnJlbnRVc2VyRXhwZW5zZSk7XG5cbiAgICAvLyBleHBlbnNlRmFjdG9yeS5hbGxFeHBlbnNlKGZ1bmN0aW9uKGV4cGVuc2Upe1xuICAgIC8vICAgdm0uZXhwZW5zZSA9IGV4cGVuc2U7XG4gICAgLy8gfSk7XG5cbiAgICB2bS5zYXZlRXhwZW5zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGRlYnVnZ2VyO1xuICAgICAgdmFyIHJhbmROdW0gPSAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMDAwMDAwMCkpO1xuICAgICAgdmFyIHByb2ZpbGVSZWYgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vYmFua3JvbGwuZmlyZWJhc2Vpby5jb20vcHJvZmlsZXMvJyk7XG4gICAgICB2bS5leHBlbnNlLnRpbWUgPSBEYXRlKCk7XG4gICAgICB2bS5leHBlbnNlLmRhdGUgPSBKU09OLnN0cmluZ2lmeSh2bS5leHBlbnNlLmRhdGUpO1xuICAgICAgcHJvZmlsZVJlZi5jaGlsZCgkcm9vdFNjb3BlLmF1dGgudWlkICsgJy9leHBlbnNlJyArICcvZXhwZW5zZScgKyAocmFuZE51bSkpLnNldCh2bS5leHBlbnNlLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2RvbmUgc2V0dGluZyBleHBlbnNlLCBlcnI6JywgZXJyKTtcbiAgICAgIC8vICRzY29wZS5pbmNvbWVMaXN0ID0gJGZpcmViYXNlT2JqZWN0KHByb2ZpbGVSZWYpO1xuICAgICAgICAvLyB2YWx1ZSBoYXMgYmVlbiBzZXQsIGNhbiByZWRpcmVjdCB0aGUgdXNlciBvciB3aGF0IGV2ZXJcbiAgICAgICAgdm0uZXhwZW5zZSA9IHt9O1xuICAgICAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgICB9KTtcbiAgICB9O1xufSk7XG4iXX0=
