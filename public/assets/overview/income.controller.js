'use strict';

angular.module('bankRoll').controller('IncomeController', function ($scope, incomeFactory, $firebaseObject, API_URL, $rootScope, currentUser) {
  var vm = this;
  var fb = new Firebase(API_URL);
  // var authData = fb.getAuth();

  var profileRef = new Firebase('https://bankroll.firebaseio.com/profiles');
  var currentUserIncome = profileRef.child($rootScope.auth.uid).child('income');
  $scope.incomeList = $firebaseObject(currentUserIncome);
  console.log(currentUserIncome);

  incomeFactory.allIncome(function (income) {
    vm.income = income;
  });

  // vm.id = currentUser.uid;

  // incomeFactory.getOne(vm.id, function (income) {
  //   vm.income = income;
  // });

  // vm.destroy = function (id) {
  //   incomeFactory.destroy(vm.id, function () {
  //     $location.path('/overview');
  //   });
  // };

  vm.saveIncome = function () {
    var randNum = Math.floor(Math.random() * 1000000000000000);
    var profileRef = new Firebase('https://bankroll.firebaseio.com/profiles/');
    vm.income.time = Date();
    vm.income.date = JSON.stringify(vm.income.date);
    profileRef.child($rootScope.auth.uid + '/income' + '/income' + randNum).set(vm.income, function (err) {
      console.log('done setting income, err:', err);
      // $scope.incomeList = $firebaseObject(profileRef);
      // value has been set, can redirect the user or what ever
      vm.income = {};
      $scope.$apply();
    });
  };
  // vm.onModalLoad = function () {};
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hc3NldHMvb3ZlcnZpZXcvaW5jb21lLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQ0osTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUVsQixVQUFVLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxNQUFNLEVBQUUsYUFBYSxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRTtBQUNsSCxNQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFDZCxNQUFJLEVBQUUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7O0FBSS9CLE1BQUksVUFBVSxHQUFHLElBQUksUUFBUSxDQUFDLDBDQUEwQyxDQUFDLENBQUM7QUFDMUUsTUFBSSxpQkFBaUIsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzlFLFFBQU0sQ0FBQyxVQUFVLEdBQUcsZUFBZSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDdkQsU0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDOztBQUUvQixlQUFhLENBQUMsU0FBUyxDQUFDLFVBQVMsTUFBTSxFQUFDO0FBQ3RDLE1BQUUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0dBQ3BCLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUFjSCxJQUFFLENBQUMsVUFBVSxHQUFHLFlBQVk7QUFDMUIsUUFBSSxPQUFPLEdBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsZ0JBQWdCLENBQUMsQUFBQyxDQUFDO0FBQzdELFFBQUksVUFBVSxHQUFHLElBQUksUUFBUSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDM0UsTUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsSUFBSSxFQUFFLENBQUM7QUFDeEIsTUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hELGNBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsU0FBUyxHQUFHLFNBQVMsR0FBSSxPQUFPLEFBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVMsR0FBRyxFQUFFO0FBQ3JHLGFBQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLEVBQUUsR0FBRyxDQUFDLENBQUM7OztBQUc5QyxRQUFFLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNmLFlBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUNqQixDQUFDLENBQUM7R0FDSixDQUFDOztDQUVMLENBQUMsQ0FBQyIsImZpbGUiOiJzcmMvYXNzZXRzL292ZXJ2aWV3L2luY29tZS5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhclxuICAubW9kdWxlKCdiYW5rUm9sbCcpXG5cbiAgLmNvbnRyb2xsZXIoJ0luY29tZUNvbnRyb2xsZXInLCBmdW5jdGlvbiAoJHNjb3BlLCBpbmNvbWVGYWN0b3J5LCAkZmlyZWJhc2VPYmplY3QsIEFQSV9VUkwsICRyb290U2NvcGUsIGN1cnJlbnRVc2VyKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2YXIgZmIgPSBuZXcgRmlyZWJhc2UoQVBJX1VSTCk7XG4gICAgLy8gdmFyIGF1dGhEYXRhID0gZmIuZ2V0QXV0aCgpO1xuXG5cbiAgICB2YXIgcHJvZmlsZVJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9iYW5rcm9sbC5maXJlYmFzZWlvLmNvbS9wcm9maWxlcycpO1xuICAgIHZhciBjdXJyZW50VXNlckluY29tZSA9IHByb2ZpbGVSZWYuY2hpbGQoJHJvb3RTY29wZS5hdXRoLnVpZCkuY2hpbGQoJ2luY29tZScpO1xuICAgICRzY29wZS5pbmNvbWVMaXN0ID0gJGZpcmViYXNlT2JqZWN0KGN1cnJlbnRVc2VySW5jb21lKTtcbiAgICBjb25zb2xlLmxvZyhjdXJyZW50VXNlckluY29tZSk7XG5cbiAgICBpbmNvbWVGYWN0b3J5LmFsbEluY29tZShmdW5jdGlvbihpbmNvbWUpe1xuICAgICAgdm0uaW5jb21lID0gaW5jb21lO1xuICAgIH0pO1xuXG4gICAgLy8gdm0uaWQgPSBjdXJyZW50VXNlci51aWQ7XG5cbiAgICAvLyBpbmNvbWVGYWN0b3J5LmdldE9uZSh2bS5pZCwgZnVuY3Rpb24gKGluY29tZSkge1xuICAgIC8vICAgdm0uaW5jb21lID0gaW5jb21lO1xuICAgIC8vIH0pO1xuXG4gICAgLy8gdm0uZGVzdHJveSA9IGZ1bmN0aW9uIChpZCkge1xuICAgIC8vICAgaW5jb21lRmFjdG9yeS5kZXN0cm95KHZtLmlkLCBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgICRsb2NhdGlvbi5wYXRoKCcvb3ZlcnZpZXcnKTtcbiAgICAvLyAgIH0pO1xuICAgIC8vIH07XG5cbiAgICB2bS5zYXZlSW5jb21lID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHJhbmROdW0gPSAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMDAwMDAwMCkpO1xuICAgICAgdmFyIHByb2ZpbGVSZWYgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vYmFua3JvbGwuZmlyZWJhc2Vpby5jb20vcHJvZmlsZXMvJyk7XG4gICAgICB2bS5pbmNvbWUudGltZSA9IERhdGUoKTtcbiAgICAgIHZtLmluY29tZS5kYXRlID0gSlNPTi5zdHJpbmdpZnkodm0uaW5jb21lLmRhdGUpO1xuICAgICAgcHJvZmlsZVJlZi5jaGlsZCgkcm9vdFNjb3BlLmF1dGgudWlkICsgJy9pbmNvbWUnICsgJy9pbmNvbWUnICsgKHJhbmROdW0pKS5zZXQodm0uaW5jb21lLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2RvbmUgc2V0dGluZyBpbmNvbWUsIGVycjonLCBlcnIpO1xuICAgICAgLy8gJHNjb3BlLmluY29tZUxpc3QgPSAkZmlyZWJhc2VPYmplY3QocHJvZmlsZVJlZik7XG4gICAgICAgIC8vIHZhbHVlIGhhcyBiZWVuIHNldCwgY2FuIHJlZGlyZWN0IHRoZSB1c2VyIG9yIHdoYXQgZXZlclxuICAgICAgICB2bS5pbmNvbWUgPSB7fTtcbiAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICAvLyB2bS5vbk1vZGFsTG9hZCA9IGZ1bmN0aW9uICgpIHt9O1xufSk7XG4iXX0=
